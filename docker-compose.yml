services:
  qr-generator:
    build: .
    container_name: qr-generator-app
    # Remove host port publishing (optional but recommended)
    # ports:
    #   - "9001:5000"
    expose:
      - "5000"
    environment:
      - FLASK_ENV=production
      - FLASK_PORT=5000
      - PYTHONUNBUFFERED=1
      - GUNICORN_WORKERS=2
      - GUNICORN_LOG_LEVEL=info
    volumes:
      - ./static/uploads:/app/static/uploads
    restart: unless-stopped
    labels:
      - "traefik.enable=true"

      # HTTP router
      - 'traefik.http.routers.app1-http.rule=Host(`qr.jo3.dev`)'
      - "traefik.http.routers.app1-http.entrypoints=web"
      # - "traefik.http.routers.app1-http.middlewares=app1-redirect"
      - "traefik.http.routers.app1-http.service=app1"

      # HTTPS router
      # - "traefik.http.routers.app1-https.rule=Host(`qr.jo3.dev`)"
      # - "traefik.http.routers.app1-https.entrypoints=websecure"
      # - "traefik.http.routers.app1-https.tls.certresolver=le"
      # - "traefik.http.routers.app1-https.service=app1"

      # HTTPâ†’HTTPS redirect middleware
      # - "traefik.http.middlewares.app1-redirect.redirectscheme.scheme=https"

      # HTTP router (needed for ACME http-01 and redirects)
      # - "traefik.http.routers.app1-http.rule=Host(`qr.jo3.dev`)"
      # - "traefik.http.routers.app1-http.entrypoints=web"
      # - "traefik.http.routers.app1-http.middlewares=app1-redirect"
      
      # # HTTPS router
      # - "traefik.http.routers.app1-https.rule=Host(`qr.jo3.dev`)"
      # - "traefik.http.routers.app1-https.entrypoints=websecure"
      # - "traefik.http.routers.app1-https.tls.certresolver=le"
      # Target the container's internal port
      - "traefik.http.services.app1.loadbalancer.server.port=5000"

      # Ensure Traefik uses the correct Docker network
      - "traefik.docker.network=proxy"
networks:
  default:
    external: true
    name: proxy